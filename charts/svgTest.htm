<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>svg</title>
        <meta name="description" content="Interaktywny">
        
    </head>
    <body onload="init()" ><style>
        .full {width: 100%; height: 100%;}
        .full {position: absolute; top: 0; left: 0;}
        .container {
            position: absolute;
            top: 80px;
            left: 80px;
            width: 30px;
            height: 30px;
            border: 3px solid #73AD21;
            
        }
        .pointer {}
        </style>
        <script>
            //var newDiv= new svgDiv('abc');
            function divAndSvg(id,params){
                var changes=dataTest;
                for(k in params){
                    changes[k]=params[k]
                }
                var string="";
                string+='<div id="'+id+'" class="container"';
                string+=dataFields(changes);
                string+='><svg width="" height=""><path class=pointer d="" stroke="red" stroke-width="5" fill="none"/></svg></div>';
                var el=document.getElementById("full")
                el.innerHTML+=string;
                document.getElementById(id).addEventListener('click',function(){
                    getMousePosition(this);
                },false);
            }
            function dataFields(json){
                var string=""
                for( k in json){
                    string+=' data-'+k+'="'+json[k]+'"';
                }
                return string;
            }
            var dataTest={
                "pad_x":80,
                "pad_y":80,
                "size_x":300,
                "size_y":400,
                "min_x":0,
                "min_y":0,
                "width":600,
                "height":600,
                "begin_0":0,
                "begin_1":0,
                "end_0":0,
                "end_1":0,
                "start_point":false
                
            }
            /*
            var settings={
                svgSize:{
                    x:700,
                    y:300
                },
                svgPadding:{
                    x:80,
                    y:80
                },
                viewBox:{
                    min_x:0,
                    min_y:0,
                    width:1500,
                    height:3000
                },
                pos:{
                    begin:[0,0],
                    end:[0,0],
                    startPoint:false
                }   
            }
            */
            function applyToSvg(self){
                //var div = document.getElementById(id);
                console.log('a',self)
                var divData=self.dataset;
                var svg = self.getElementsByTagName('svg');
                svg=svg[0];
                console.log(svg);
                var viewPos=""+divData['min_x']+" "+divData['min_y']+" "+divData.width+" "+divData.height;
                console.log('view',viewPos);
                //console.log(divData["size_x"]);
                self.style.width=divData["size_x"]+"px";
                self.style.height=divData["size_y"]+"px";
                svg.setAttribute("width",divData["size_x"]+'px');
                svg.setAttribute("height",divData["size_y"]+"px");
                svg.setAttribute("viewBox", viewPos);
                
            }
            function svgByDivId(id){
                var el=document.getElementById(id)
                return el.getElementsByTagName('svg');
            }
            function init(){
                divAndSvg('abc',{});
                var svg=document.getElementById('abc')
                applyToSvg(svg);
                sendObj('data',{mode:'data',name:'average.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath(svg,obj.data,{stroke:"green",fill:'none'});
                });    
                prepare(svg);
                /*
                divAndSvg('abc',{"pos-x":1,"pos-y":2});
                console.log(svgByDivId('abc'));
                applyToSvg('abc');
                //var x=posInSvgScale();
                //changePath();
                */
            }
            /*
            sendObj('data',{mode:'data',name:'higher_point.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('test',obj.data,{stroke:"pink",fill:'none'});
            });               
            sendObj('data',{mode:'data',name:'test.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('test',obj.data,{stroke:"blue",fill:'none'});
            });        
            /*
            sendObj('data',{mode:'data',name:'average10.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('average10',obj.data,{stroke:"purple",fill:'none'});
            });          
             */
            /*
            sendObj('data',{mode:'data',name:'test_min.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('orginal',obj.data,{stroke:"red",fill:'none'});
            });               
            sendObj('data',{mode:'folder',id:'line2'},function(obj){
                var el=document.getElementById('setClass');
                var string="";
                for(var i=0;i<obj.data.length;i++){
                    string+='<option value="'+obj.data[i]+'" >'+obj.data[i]+'</option>'
                }
                el.innerHTML=string;
                //console.log(string);
                //changePath('line2',obj['data'])   
            });
            */
            function createPath(self,path,style){
                console.log('b',self);
                var svg=self.getElementsByTagName('svg')[0];
                var setstring="";
                for(k in style){
                    setstring+=k+'="'+style[k]+'" ';
                }
                svg.innerHTML+='<path d="'+path+'" '+setstring+'/>';
                //console.log('<path id="'+id+'" d="'+path+'" '+setstring+'/>');
                //return '<path id="'+id+'" d="'+path+'" '+setstring+'/>';
            }
            function changePath(self,path){
               self.getElementsByClassName('pointer')[0].setAttribute("d",path);
               // console.log(x);
            }
            function posInSvgScale(self){
                var x = event.clientX;
                var y = event.clientY;
                var params=self.dataset;
                //console.log(x);
                //console.log(y);
                //changeViewbox(someTest);
                    //var pads=settings.svgPadding;
                    //var viewBox=settings.viewBox;
                    var xPos=(x-params['pad_x'])*params['width']/params['size_x']+params['min_x'];
                    var yPos=(y-params['pad_y'])*params['height']/params['size_y']+params['min_y'];
                    //console.log(xPos);
                    return [xPos,yPos];
                
                
            }
            function getMousePosition(self){
                //console.log(self);
                //var svg=self.getElementsByTagName('svg');
                var is=posInSvgScale(self);
                    //var pos=settings.pos;
                    addPos(self,is[0],is[1]);
                   // console.log(pos);
                    var svgEl=point(is[0],is[1]);
                    addElementToSvg(self,svgEl);
                    
                
                //var coords = "X coords: " + x + ", Y coords: " + y;
                //console.log(coords);
            }
            function point(cx,cy){
                return '<circle cx="'+cx+'" cy="'+cy+'" r="1" stroke="black" stroke-width="1" fill="red" />';
            }
            function move(self){
                var x=posInSvgScale(self);
                var pos = self.dataset;
                var points = "M"+pos.begin_0 +" "+pos.begin_1;
                points+=" H"+x[0]+ " V"+x[1] +" H"+pos.begin_0+ " Z";
                console.log(points);
                changePath(self,points);
                
                //console.log("im here");
            }
            function addPos(self,posX,posY){
                //var element=document.getElementById("svgContainer");
                var pos=self.dataset;
                var x= self.getElementsByTagName('svg')[0];
                if(pos.start_point=="false"){
                    pos.begin_0=posX;
                    pos.begin_1=posY;
                    pos.start_point="true";
                    
                    self.addEventListener("mousemove",function(){move(this);}, false);
                }
                else{
                    pos.end_0=posX;
                    pos.end_1=posY;
                    pos.start_point="false";
                   // var old_element = document.getElementById("btn");
                    var new_element = self.cloneNode(true);
                    new_element.addEventListener('click',function(){getMousePosition(this);},false);
                    self.parentNode.replaceChild(new_element, self);
                    console.log(self);
                    
                    //self.removeEventListener("mousemove", help, false);
                    rescaleViewbox(self);
                    
                    
                    //do some stuff
                    pos.end_0="0";
                    pos.end_1="0";
                    pos.begin_0="0";
                    pos.begin_1="0";
                    //pos.start_point="false";
                }
            }
            function secendHelp(a){
                console.log(a.srcElement);
                //console.log(12);
            }
            function help(event){
                //move(this);
                console.log('a');
            }
            function rescaleViewbox(self){
                var pos=self.dataset;
                console.log(pos);
                var min_x=Math.min(pos["begin_0"],pos["end_0"]);
                var min_y=Math.min(pos["end_1"],pos["begin_1"]);
                var width=Math.abs(pos["end_0"]-pos["begin_0"]);
                var height=Math.abs(pos["end_1"]-pos["begin_1"]);
                var diff;
                //var set=settings.svgSize;
                if(Number(pos['size_x'])-width<Number(pos['size_y'])-height){
                    diff=width*Number(pos['size_y'])/Number(pos['size_x'])-height;
                    min_y-=diff/2;
                    height+=diff;
                }
                else{
                    diff=height*Number(pos['size_x'])/Number(pos['size_y'])-width;
                    min_x-=diff/2;
                    width+=diff;
                }
                console.log(pos['size_x'],pos['size_x'],width,height);
                pos['minX']=min_x+"";
                pos['minY']=min_y+"";
                pos.width=width+"";
                pos.height=height+"";
                applyToSvg(self);
            }
            function prepare(self){
                var pos=self.dataset;
                var min_x=0;
                var min_y=0;
                var width=Number(pos.width);
                var height=Number(pos.height);
                var diff;
                //var set=settings.svgSize;
                if(Number(pos['size_x'])-width<Number(pos['size_y'])-height){
                    diff=width*Number(pos['size_y'])/Number(pos['size_x'])-height;
                    min_y-=diff/2;
                    height+=diff;
                }
                else{
                    diff=height*Number(pos['size_x'])/Number(pos['size_y'])-width;
                    min_x-=diff/2;
                    width+=diff;
                }
                console.log(pos['size_x'],pos['sizeX'],width,height);
                pos['minX']=min_x+"";
                pos['minY']=min_y+"";
                pos.width=width+"";
                pos.height=height+"";
                applyToSvg(self);
            }
            function addElementToSvg(elem,whatToAdd){
                elem.getElementsByTagName('svg').innerHTML+=whatToAdd;  
                //var elem=document.getElementById("svg");
                //elem          
            }
            function sendObj(url,json_obj,callback){
                var http = new XMLHttpRequest();
                //var url = "get_data";
                var string_obj = JSON.stringify(json_obj);
                   // console.log(string_obj);
                http.open("POST", url, true);
                http.setRequestHeader("Content-type", "application/json");
                http.onreadystatechange = function() {//Call a function when the state changes.
                    if(http.readyState == 4 && http.status == 200) {
                        //console.log('resText',http.responseText);
                        var res=JSON.parse(http.responseText);
                        //console.log(res);
                        //console.log('resText',res);
                        callback(res);
                    }
                    else{console.log(http.status);}
                }
                http.send(string_obj);
            }
        </script>
 
        <div class="full" id="full"  >Hey
            <div class="container" id="svgContainer" onclick="getMousePosition(this)">
                <svg width="300" height="300" id="svg">
                <path class='pointer' d="M0 0 L1 308 L2 304 L3 312.12 L4 323 L5 304 " stroke="red" stroke-width="5" fill="none"/>
                
                </svg>
            
            </div>
                            <select  id="setClass">
                                    <option  value="all">All</option>
                                    <option  value="1ga">1ga</option>
                                    <option  value="1gb">1gb</option>
									<option  value="1gc">1gc</option>
									<option  value="1gd">1gd</option>
									<option  value="2ga">2ga</option>
									<option  value="2gd">2gb</option>
									<option  value="2gc">2gc</option>
									<option  value="2gd">2gd</option>
									<option  value="3ga">3ga</option>
									<option  value="3gb">3gb</option>
									<option  value="3gc">3gc</option>
									<option  value="3gd">3gd</option>
									<option  value="1a">1a</option>
                                    <option  value="1b">1b</option>
                                    <option  value="1c">1c</option>
                                    <option  value="1d">1d</option>
                                    <option  value="2a">2a</option>
                                    <option  value="2b">2b</option>
                                    <option  value="2c">2c</option>
                                    <option  value="2d">2d</option>
                                    <option  value="3a">3a</option>
                                    <option  value="3b">3b</option>
                                    <option  value="3c">3c</option>
                                    <option  value="3d">3d</option>
                                </select>
       
     </div>
    </body>
</html>
