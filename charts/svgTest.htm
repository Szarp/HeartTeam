<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>svg</title>
        <meta name="description" content="Interaktywny">
        
    </head>
    <body onload="init()" ><style>
        .full {width: 100%; height: 100%;}
        .full {position: absolute; top: 0; left: 0;}
        .container {
            position: absolute;
            top: 80px;
            left: 80px;
            width: 300px;
            height: 300px;
            border: 3px solid #73AD21;
            
        }
        </style>
        <script>
            var settings={
                svgSize:{
                    x:700,
                    y:300
                },
                svgPadding:{
                    x:80,
                    y:80
                },
                viewBox:{
                    min_x:0,
                    min_y:0,
                    width:1500,
                    height:3000
                },
                pos:{
                    begin:[0,0],
                    end:[0,0],
                    startPoint:false
                }
                
                
            }
            function init(){
                svgSize(settings.svgSize.x,settings.svgSize.y);
                svgPadding(settings.svgPadding.x,settings.svgPadding.y);
                changeViewbox();
                prepare();
                //var x=posInSvgScale();
                //changePath();
            }
            function svgPadding(x,y){
                var div = document.getElementById("svgContainer");
                div.style.top=x+'px';
                div.style.left=y+'px';
            }
            function svgSize(width,height){
                var div = document.getElementById("svgContainer");
                div.style.width=width+'px';
                div.style.height=height+'px';
                var shape=document.getElementById("svg");
                shape.setAttribute("width", width);
                shape.setAttribute("height", height);
                
                
            }
            sendObj('data',{mode:'data',name:'ave.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('average',obj.data,{stroke:"green",fill:'none'});
            });    
            sendObj('data',{mode:'data',name:'test.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('test',obj.data,{stroke:"blue",fill:'none'});
            });                   
            sendObj('data',{mode:'data',name:'average10.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('average10',obj.data,{stroke:"purple",fill:'none'});
            });          
             
            sendObj('data',{mode:'data',name:'test_min.txt'},function(obj){
                //console.log(obj);
                //changePath('line2',obj['data']);
                createPath('orginal',obj.data,{stroke:"red",fill:'none'});
            });               
            sendObj('data',{mode:'folder',id:'line2'},function(obj){
                var el=document.getElementById('setClass');
                var string="";
                for(var i=0;i<obj.data.length;i++){
                    string+='<option value="'+obj.data[i]+'" >'+obj.data[i]+'</option>'
                }
                el.innerHTML=string;
                console.log(string);
                //changePath('line2',obj['data'])   
            })
            function createPath(id,path,style){
                var setstring="";
                for(k in style){
                    setstring+=k+'="'+style[k]+'" ';
                }
                document.getElementById("svg").innerHTML+='<path id="'+id+'" d="'+path+'" '+setstring+'/>';
                //console.log('<path id="'+id+'" d="'+path+'" '+setstring+'/>');
                return '<path id="'+id+'" d="'+path+'" '+setstring+'/>';
            }
            function changePath(id,path){
                document.getElementById(id).setAttribute("d",path);
                
            }
            function posInSvgScale(){
                var x = event.clientX;
                var y = event.clientY;
                console.log(x);
                console.log(y);
                //changeViewbox(someTest);
                var is=inSvg(x,y);
                if(is == true){
                    var pads=settings.svgPadding;
                    var viewBox=settings.viewBox;
                    var xPos=(x-pads.x)*viewBox.width/settings.svgSize.x+viewBox.min_x;
                    var yPos=(y-pads.y)*viewBox.height/settings.svgSize.y+viewBox.min_y;
                    //console.log(xPos);
                    return [true,xPos,yPos];
                }
                else{ return[false];}
                
                
            }
            function getMousePosition(){
                var is=posInSvgScale();
                if(is[0] == true){
                    //var pads=settings.svgPadding;
                    //var viewBox=settings.viewBox;
                    //var xPos=(x-pads.x)*viewBox.width/settings.svgSize.x+viewBox.min_x;
                    //var yPos=(y-pads.y)*viewBox.height/settings.svgSize.y+viewBox.min_y;
                    //var pos=settings.pos;
                    addPos(is[1],is[2]);
                   // console.log(pos);
                    var svgEl=point(is[1],is[2]);
                    addElementToSvg(svgEl);
                    
                }
                //var coords = "X coords: " + x + ", Y coords: " + y;
                //console.log(coords);
            }
            function point(cx,cy){
                return '<circle cx="'+cx+'" cy="'+cy+'" r="1" stroke="black" stroke-width="1" fill="red" />';
            }
            function move(){
                var x=posInSvgScale();
                var pos = settings.pos;
                var points = "M"+pos.begin[0] +" "+pos.begin[1];
                points+=" H"+x[1]+ " V"+x[2] +" H"+pos.begin[0]+ " Z";
                //console.log(points);
                changePath("pointer",points);
                
                //console.log("im here");
            }
            function addPos(posX,posY){
                var element=document.getElementById("svgContainer");
                var pos=settings.pos;
                if(pos.startPoint==false){
                    pos.begin=[posX,posY];
                    pos.startPoint=true;
                    element.addEventListener("mousemove", move, false);
                }
                else{
                    pos.end=[posX,posY];
                    pos.startPoint=false;
                    element.removeEventListener("mousemove", move, false);
                    rescaleViewbox();
                    //do some stuff
                    pos={begin:[0,0],end:[0,0],startPoint:false};
                }
            }
            function rescaleViewbox(){
                var pos=settings.pos;
                var min_x=Math.min(pos.begin[0],pos.end[0]);
                var min_y=Math.min(pos.end[1],pos.begin[1]);
                var width=Math.abs(pos.end[0]-pos.begin[0]);
                var height=Math.abs(pos.end[1]-pos.begin[1]);
                var diff;
                var set=settings.svgSize;
                if(set.width-width>set.height-height){
                    diff=width*300/700-height;
                    min_y-=diff/2;
                    height+=diff;
                }
                else{
                    diff=height*700/300-width;
                    min_x-=diff/2;
                    width+=diff;
                }
                settings.viewBox={
                    min_x:min_x,
                    min_y:min_y,
                    width:width,
                    height:height
                }
                changeViewbox();
            }
            function prepare(){
                var pos=settings.pos;
                var min_x=0;
                var min_y=0;
                var width=settings.viewBox.width;
                var height=settings.viewBox.height;
                var diff;
                var set=settings.svgSize;
                if(set.x-width<set.y-height){
                    diff=width*set.y/set.x-height;
                    min_y-=diff/2;
                    height+=diff;
                }
                else{
                    diff=height*set.x/set.y-width;
                    min_x-=diff/2;
                    width+=diff;
                }
                settings.viewBox={
                    min_x:min_x,
                    min_y:min_y,
                    width:width,
                    height:height
                }
                changeViewbox();
            }
            function inSvg(posX,posY){
                var status=false; //to change
                if(posX > settings.svgPadding.x && posX < settings.svgPadding.x+settings.svgSize.x){
                    if (posY >settings.svgPadding.x && posY < settings.svgPadding.y+settings.svgSize.y){
                        status=true;
                    }
                    
                }
                return status;
            }
            function addElementToSvg(el){
                var elem=document.getElementById("svg");
                elem.innerHTML+=el;            
            }
            function changeViewbox(){
                points=settings.viewBox;
                var viewPos=""+points.min_x+" "+points.min_y+" "+points.width+" "+points.height;
                var shape=document.getElementById("svg");
                shape.setAttribute("viewBox", viewPos);
                
            }
            function sendObj (url,json_obj,callback){
                var http = new XMLHttpRequest();
                //var url = "get_data";
                var string_obj = JSON.stringify(json_obj);
                   // console.log(string_obj);
                http.open("POST", url, true);
                http.setRequestHeader("Content-type", "application/json");
                http.onreadystatechange = function() {//Call a function when the state changes.
                    if(http.readyState == 4 && http.status == 200) {
                        //console.log('resText',http.responseText);
                        var res=JSON.parse(http.responseText);
                        //console.log(res);
                        //console.log('resText',res);
                        callback(res);
                    }
                    else{console.log(http.status);}
                }
                http.send(string_obj);
            }
        </script>
 
        <div class="full" id="hey" onclick="getMousePosition()" >Hey
            <div class="container" id="svgContainer">
                <svg width="300" height="300" id="svg">
                <path id='pointer' d="M0 0 L1 308 L2 304 L3 312.12 L4 323 L5 304 " stroke="red" stroke-width="5" fill="none"/>
                
                </svg>
            
            </div>
                            <select  id="setClass">
                                    <option  value="all">All</option>
                                    <option  value="1ga">1ga</option>
                                    <option  value="1gb">1gb</option>
									<option  value="1gc">1gc</option>
									<option  value="1gd">1gd</option>
									<option  value="2ga">2ga</option>
									<option  value="2gd">2gb</option>
									<option  value="2gc">2gc</option>
									<option  value="2gd">2gd</option>
									<option  value="3ga">3ga</option>
									<option  value="3gb">3gb</option>
									<option  value="3gc">3gc</option>
									<option  value="3gd">3gd</option>
									<option  value="1a">1a</option>
                                    <option  value="1b">1b</option>
                                    <option  value="1c">1c</option>
                                    <option  value="1d">1d</option>
                                    <option  value="2a">2a</option>
                                    <option  value="2b">2b</option>
                                    <option  value="2c">2c</option>
                                    <option  value="2d">2d</option>
                                    <option  value="3a">3a</option>
                                    <option  value="3b">3b</option>
                                    <option  value="3c">3c</option>
                                    <option  value="3d">3d</option>
                                </select>
       
     </div>
    </body>
</html>
